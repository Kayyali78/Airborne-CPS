
**************************************************************




Not specically VS2019 related, but the VS Solution has
been set up to hard link to to library and linker directories instead of
relative link to them. This ends up requiring many manual modifications
to the project settings to link to your exact location of the project
on each developer's system. I modified the project properties to use the
$(SolutionDir) Visual Studio macro to set up relative paths. 

\project properties\Configuration Properties\C/C++\General\Additional Include Directories\  : 
$(SolutionDir)\SDK\Delphi\Widgets;$(SolutionDir)\SDK\Delphi\XPLM;$(SolutionDir)\SDK\CHeaders\XPLM;$(SolutionDir)\SDK\CHeaders\Widgets;$(SolutionDir)\src;$(SolutionDir)\SDK\CHeaders

\project properties\Configuration Properties\Linker\General\Additional Library Directories\  : 
$(SolutionDir)\SDK\CHeaders\google\protobuf;$(SolutionDir)\Release\32;$(SolutionDir)\SDK\Libraries\Win



****************************************************************
VS 2019 Issue #1 : std::round and std::roundf not resolved by VS's compiler


Compilation Errors:

Severity	Code	Description	Project	File	Line	Suppression State
Error	C2039	'round': is not a member of 'std'	Airborne-CPS	E:\Airborne-CPS\src\component\ArtHorizGaugeRenderer.cpp	941	

Severity	Code	Description	Project	File	Line	Suppression State
Error	C2039	'roundf': is not a member of 'std'	Airborne-CPS	E:\Airborne-CPS\src\component\ArtHorizGaugeRenderer.cpp	1087	

Severity	Code	Description	Project	File	Line	Suppression State
Error	C2039	'round': is not a member of 'std'	Airborne-CPS	E:\Airborne-CPS\src\component\ArtHorizGaugeRenderer.cpp	1212	

Severity	Code	Description	Project	File	Line	Suppression State
Error	C2039	'round': is not a member of 'std'	Airborne-CPS	E:\Airborne-CPS\src\component\VSpeedIndicatorGaugeRenderer.cpp	202	


were attempted to be resolved by changing the project's C++ Language Standard from Default to:
ISO C++14 Standard (/std:c++14)
ISO C++17 Standard (/std:c++17)
Preview - Features from the Latest C++ Working Draft (/std:c++latest)

None of these options solved the issue, so the project was set back to Default.

This resolved the issues with round and roundf.

************************************************************


*************************************************************

Issue #2: Strange syntax or code errors in Location.h 

VS2019 Compilation Errors:

Severity	Code	Description	Project	File	Line	Suppression State
Error	C2059	syntax error: '<<'	Airborne-CPS	E:\Airborne-CPS\src\data\Location.h	49	

Severity	Code	Description	Project	File	Line	Suppression State
Error	C2059	syntax error: '=='	Airborne-CPS	E:\Airborne-CPS\src\data\Location.h	51	

Are caused by the following code:


in the following code section in Location.h 
namespace xplane{

	class Location {
	public:
    
    ...
    ...
    ...
    
		int getSize() {
<<<<<<< HEAD
			BuildPlane();
=======
>>>>>>> 934d9e673c4b28f30c9f6029b944dea13a5b9185
			char const *c = plane.c_str();
			size_t length = strlen(c);
			return length;
		}

Obviously some of these lines are not valid C++.
I am unable to determine the intent of those lines as well.
        
Resolution for now was to comment out the following lines (49-52):
//<<<<<<< HEAD
			BuildPlane();    // not commented out
//=======
//>>>>>>> 934d9e673c4b28f30c9f6029b944dea13a5b9185

I left BuildPlane(); uncommented for now, but will need to see if this was also in error.


*****************************************************************



*****************************************************************

Compiler Error:
Severity	Code	Description	Project	File	Line	Suppression State
Error	C2059	syntax error: '<<'	Airborne-CPS	E:\Airborne-CPS\src\component\Transponder.cpp	76	

Also in Transponder.h

DWORD Transponder::receiveLocation()
{
	char const * intruderID;
	char const * myID;
	xplane::Location temp;
	while (communication)
	{
		XPLMDebugString("Pre receive");
<<<<<<< HEAD
		//temp = myLocation;
		//temp.BuildPlane();
=======
>>>>>>> 934d9e673c4b28f30c9f6029b944dea13a5b9185
		int size = myLocation.getSize();
		char* buffer = (char*)malloc(size);
		myID = myLocation.getID().c_str();
        
Again the following non-C++ lines were commented out to resolve the compiler error
//<<<<<<< HEAD
		//temp = myLocation;
		//temp.BuildPlane();
//=======
//>>>>>>> 934d9e673c4b28f30c9f6029b944dea13a5b9185

*******************************************************************


********************************************************************

